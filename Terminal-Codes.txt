#### Terminal #####
ls                      # list dir content
mkdir folder_name       # create directory called "folder_name"
rmdir folder_name       # remove an empty directory as long as it is empty
rm -r folder_name       # remove dir that is not empty, "r" stands for recursive (PERMANENT)
rm fileame-1 filename-2 filename-3

cd                      # change dir
../                     # two dots represents parent dir
.                       # single dot represents current workingdir 
cd ~/projects           # concatenate with forward slashes
cd ../..                # change to two parent layer beyond
cd -                    # whatever dir you were before
cd                      # return to the home dir

mv path_to_file path_to_destination_directory   # move a file to a different directory

(set up the working directory using 'cd' command first)
mv name_of_file new_name                        # change name of the file
mv name_of_file directory/new_name              # combine moving and renaming
mv directory_of_file new_directory/             # move the entire directory (put '/' at the end)

cp                                              # copy command (works the same as 'mv')
                                                # cannot copy without learning about arguments
                                                
less file_name                                  # quickly look at the content of the file
q                                               # exit the viewer (arrow keys to move up & down)

relative path : look for a directory in your working directory
~             : home directory
.             : working directory 


git clone URL_of_git-repository
git status

##make changes to the files
##edits in staging area are not kept by the version control system
echo "test" >> new-file.txt
echo "temporary" >> tmp.txt

git add  name_of_file              # stage file
git commit -m "the_action"
git commit -m "the_action" name_of_file   #can skip 'git add'

git log name_of_file           # keep track of all the changes

git push
git fetch                      # update any changes to upstream repository to local repository
git merge                      # change files accordingly in working directory and staging area
git pull                       # change files in all stages in one shot (git fetch + git merge)

git init                       # turns the current working directory to git local repository

upstream repository  = github repository
working directory > staging area > local repository > upstream repository
                    add > commit > push (< pull)

##### in R studio ######
getwd()     # confirm current working directory 
save()      # save into .rda file (.Rdata is also fine but less preferred)
ggsave()    # save a plot generated by ggplot2 to directory called "figs"

